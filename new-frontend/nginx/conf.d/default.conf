upstream frontend {
    server frontend:3000;
}

upstream backend {
    server backend:8000;
}

# Configuração para redirecionamento HTTP para HTTPS
server {
    listen 80;
    server_name localhost;
    
    # Redirecionar todo o tráfego HTTP para HTTPS
    return 301 https://$host$request_uri;
}

# Configuração principal HTTPS
server {
    listen 443 ssl http2;
    server_name localhost;

    # Configurações SSL
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Configurações de segurança SSL modernas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (descomente se você tiver certeza sobre HTTPS)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Headers de segurança
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data:; img-src 'self' https: data:; font-src 'self' https: data:; object-src 'none'";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # Configurações de proxy
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Configuração de buffer
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Configuração de timeout
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Compressão gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;
    gzip_disable "MSIE [1-6]\.";

    # Rota principal para o frontend
    location / {
        proxy_pass http://frontend;
        
        # Cache de arquivos estáticos
        location /_next/static {
            proxy_cache STATIC;
            proxy_cache_valid 200 1y;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Cache para arquivos estáticos comuns
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }
    }

    # Rota para a API
    location /api {
        proxy_pass http://backend;
    }

    # Configuração de fallback para rotas do Next.js
    location /_next {
        proxy_pass http://frontend;
    }

    # Página de erro personalizada
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Cache para arquivos estáticos
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
