name: Cypress Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  cypress:
    name: 🧪 Cypress E2E Tests
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4] # Executa testes em paralelo

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: 💾 Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            new-frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📥 Install dependencies
        run: |
          cd new-frontend
          npm ci

      - name: 🚀 Start development server
        run: |
          cd new-frontend
          npm run dev & npx wait-on http://localhost:3000

      - name: 🧪 Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: new-frontend
          browser: chrome
          record: true
          parallel: true
          group: 'UI Tests'
          spec: cypress/e2e/**/*.cy.ts
          config-file: cypress.config.ts
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          NEXT_PUBLIC_API_BASE_URL: http://localhost:8000/api

      - name: 📊 Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results-${{ matrix.containers }}
          path: |
            new-frontend/cypress/videos
            new-frontend/cypress/screenshots
            new-frontend/cypress/reports
          retention-days: 30

      - name: 📧 Notify on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: danger
          SLACK_MESSAGE: '❌ Cypress tests failed!'
          SLACK_TITLE: Cypress Tests
          SLACK_USERNAME: Cypress Bot
          SLACK_ICON_EMOJI: ':test_tube:'

      - name: 📝 Create issue on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'new-frontend/cypress/reports/mochawesome/mochawesome.json';
            
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const failedTests = report.results.filter(r => !r.pass);
              
              if (failedTests.length > 0) {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: '❌ Cypress Tests Failed',
                  body: `
                    ## Failed Tests Report
                    
                    ${failedTests.map(test => `
                    ### ${test.title}
                    - File: ${test.file}
                    - Error: ${test.err.message}
                    - Stack: ${test.err.stack}
                    `).join('\n')}
                    
                    [View full report](${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
                  `,
                  labels: ['test-failure', 'cypress']
                });
              }
            }

  merge-reports:
    name: 📊 Merge Test Reports
    needs: cypress
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📊 Merge reports
        run: |
          npm install -g mochawesome-merge mochawesome-report-generator
          mochawesome-merge artifacts/*/cypress/reports/mochawesome/*.json > merged-report.json
          mochawesome-report-generator merged-report.json --reportDir public

      - name: 📤 Upload merged report
        uses: actions/upload-artifact@v3
        with:
          name: cypress-merged-report
          path: public
          retention-days: 30

      - name: 📊 Deploy report to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
          destination_dir: reports/cypress/${{ github.sha }}
